======================================================================
MIDI Tuning Standard概略
======================================================================

TiMidity++は，1オクターブ内の12音の音程を個別に調整するためのGS/XGスケ
ールチューニングに加えて，Universal SysEx.の中のMIDI Tuning Standardを
サポートしています。MIDI Tuning Standardは，GS/XGスケールチューニングと
比べて，下記のような利点があります。

  - 12音以外の微分音を表現できる
  - 音程を1/100セント以下の精度で調整できる
  - 音律を調性に基づき合理的に設定できる

詳細については，仕様書を参照してください。

(1) バルク音程ダンプ要求(非リアルタイム)
----------------------------------------------------------------------
F0 7E <device ID> 08 00 tt F7

F0 7E		ユニバーサル・非リアルタイムSysEx.ヘッダ
<device ID>	対象デバイスID(7F：全デバイス)
08		サブID#1：“MIDIチューニング標準”
00		サブID#2：“バルク音程ダンプ要求(非リアルタイム)”
tt		音程プログラム番号(0〜127)
F7		EOX
----------------------------------------------------------------------

(2) バルク音程ダンプ(非リアルタイム)
----------------------------------------------------------------------
F0 7E <device ID> 08 01 tt <tuning name> [xx yy zz] ... chksum F7

F0 7E		ユニバーサル・非リアルタイムSysEx.ヘッダ
<device ID>	対象デバイスID(7F：全デバイス)
08		サブID#1：“MIDIチューニング標準”
01		サブID#2：“バルク音程ダンプ(非リアルタイム)”
tt		音程プログラム番号(0〜127)
<tuning name>	音程名(ASCII16文字)
[xx yy zz]	単音の音程データ(128回繰り返し)
chksum		チェックサム(F0,F7,chksumを除いた全バイトのXOR)
F7		EOX
----------------------------------------------------------------------

(3) キー単位音程変更(リアルタイム)
----------------------------------------------------------------------
F0 7F <device ID> 08 02 tt ll [kk xx yy zz] ... F7

F0 7F		ユニバーサル・リアルタイムSysEx.ヘッダ
<device ID>	対象デバイスID(7F：全デバイス)
08		サブID#1：“MIDIチューニング標準”
02		サブID#2：“キー単位音程変更(リアルタイム)”
tt		音程プログラム番号(0〜127)
ll		変更の数([kk xx yy zz]のセット)
[kk		MIDIキー番号
 xx yy zz]	キーの音程データ(変更回繰り返し)
F7		EOX
----------------------------------------------------------------------

(4) 拡張バルク音程ダンプ要求(非リアルタイム)
----------------------------------------------------------------------
F0 7E <device ID> 08 03 bb tt F7

F0 7E		ユニバーサル・非リアルタイムSysEx.ヘッダ
<device ID>	対象デバイスID(7F：全デバイス)
08		サブID#1：“MIDIチューニング標準”
03		サブID#2：“拡張バルク音程ダンプ要求(非リアルタイム)”
bb		音程バンク番号(0〜127)
tt		音程プログラム番号(0〜127)
F7		EOX
----------------------------------------------------------------------

(5) 拡張バルク音程ダンプ(非リアルタイム)
----------------------------------------------------------------------
F0 7E <device ID> 08 04 bb tt <tuning name> [xx yy zz] ... chksum F7

F0 7E		ユニバーサル・非リアルタイムSysEx.ヘッダ
<device ID>	応答デバイスID(7F：全デバイス)
08		サブID#1：“MIDIチューニング標準”
04		サブID#2：“拡張バルク音程ダンプ(非リアルタイム)”
bb		音程バンク番号(0〜127)
tt		音程プログラム番号(0〜127)
<tuning name>	音程名(ASCII16文字)
[xx yy zz]	単音の音程データ(128回繰り返し)
chksum		チェックサム(F0,F7,chksumを除いた全バイトのXOR)
F7		EOX
----------------------------------------------------------------------

(6) スケール/オクターブ音程ダンプ 1バイト形式(非リアルタイム)
----------------------------------------------------------------------
F0 7E <device ID> 08 05 bb tt <tuning name> [xx] ... chksum F7

F0 7E		ユニバーサル・非リアルタイムSysEx.ヘッダ
<device ID>	対象デバイスID(7F：全デバイス)
08		サブID#1：“MIDIチューニング標準”
05		サブID#2：“スケール/オクターブ音程ダンプ
				1バイト形式(非リアルタイム)”
bb		音程バンク番号(0〜127)
tt		音程プログラム番号(0〜127)
<tuning name>	音程名(ASCII16文字)
[xx]		12半音(ド〜シ)チューニング・オフセット(12バイト)
			00H：−64セント
			40H：± 0セント(平均律)
			7FH：＋63セント
chksum		チェックサム(F0,F7,chksumを除いた全バイトのXOR)
F7		EOX
----------------------------------------------------------------------

(7) スケール/オクターブ音程ダンプ 2バイト形式(非リアルタイム)
----------------------------------------------------------------------
F0 7E <device ID> 08 06 bb tt <tuning name> [xx yy] ... chksum F7

F0 7E		ユニバーサル・非リアルタイムSysEx.ヘッダ
<device ID>	対象デバイスID(7F：全デバイス)
08		サブID#1：“MIDIチューニング標準”
06		サブID#2：“スケール/オクターブ音程ダンプ
				2バイト形式(非リアルタイム)”
bb		音程バンク番号(0〜127)
tt		音程プログラム番号(0〜127)
<tuning name>	音程名(ASCII16文字)
[xx yy]		12半音(ド〜シ)チューニング・オフセット(24バイト)
			00H 00H：−100セント(0.012207セントの8,192段)
			40H 00H：±  0セント(平均律)
			7FH 7FH：＋100セント(0.012207セントの8,191段)
chksum		チェックサム(F0,F7,chksumを除いた全バイトのXOR)
F7		EOX
----------------------------------------------------------------------

(8) 拡張キー単位音程変更(リアルタイム)
----------------------------------------------------------------------
F0 7F <device ID> 08 07 bb tt ll [kk xx yy zz] ... F7

F0 7F		ユニバーサル・リアルタイムSysEx.ヘッダ
<device ID>	対象デバイスID(7F：全デバイス)
08		サブID#1：“MIDIチューニング標準”
07		サブID#2：“拡張キー単位音程変更(リアルタイム)”
bb		音程バンク番号(0〜127)
tt		音程プログラム番号(0〜127)
ll		変更の数([kk xx yy zz]のセット)
[kk		MIDIキー番号
 xx yy zz]	キーの音程データ(変更回繰り返し)
F7		EOX
----------------------------------------------------------------------

(9) 拡張キー単位音程変更(非リアルタイム)
----------------------------------------------------------------------
F0 7E <device ID> 08 07 bb tt ll [kk xx yy zz] ... F7

F0 7E		ユニバーサル・非リアルタイムSysEx.ヘッダ
<device ID>	対象デバイスID(7F：全デバイス)
08		サブID#1：“MIDIチューニング標準”
07		サブID#2：“拡張キー単位音程変更(非リアルタイム)”
bb		音程バンク番号(0〜127)
tt		音程プログラム番号(0〜127)
ll		変更の数([kk xx yy zz]のセット)
[kk		MIDIキー番号
 xx yy zz]	キーの音程データ(変更回繰り返し)
F7		EOX
----------------------------------------------------------------------

(10) スケール/オクターブ・チューニング 1バイト形式(リアルタイム)
----------------------------------------------------------------------
F0 7F <device ID> 08 08 ff gg hh [ss] ... F7

F0 7F		ユニバーサル・リアルタイムSysEx.ヘッダ
<device ID>	対象デバイスID(7F：全デバイス)
08		サブID#1：“MIDIチューニング標準”
08		サブID#2：“スケール/オクターブ・チューニング
				1バイト形式(リアルタイム)”
ff		チャンネル/オプション・バイト1
			ビット0〜1：チャンネル15〜16
			ビット2〜6：将来の拡張のため予約
gg		チャンネル・バイト2
			ビット0〜6：チャンネル8〜14
hh		チャンネル・バイト3
			ビット0〜6：チャンネル1〜7
[ss]		12半音(ド〜シ)チューニング・オフセット(12バイト)
			00H：−64セント
			40H：± 0セント(平均律)
			7FH：＋63セント
F7		EOX
----------------------------------------------------------------------

(11) スケール/オクターブ・チューニング 1バイト形式(非リアルタイム)
----------------------------------------------------------------------
F0 7E <device ID> 08 08 ff gg hh [ss] ... F7

F0 7E		ユニバーサル・非リアルタイムSysEx.ヘッダ
<device ID>	対象デバイスID(7F：全デバイス)
08		サブID#1：“MIDIチューニング標準”
08		サブID#2：“スケール/オクターブ・チューニング
				1バイト形式(非リアルタイム)”
ff		チャンネル/オプション・バイト1
			ビット0〜1：チャンネル15〜16
			ビット2〜6：将来の拡張のため予約
gg		チャンネル・バイト2
			ビット0〜6：チャンネル8〜14
hh		チャンネル・バイト3
			ビット0〜6：チャンネル1〜7
[ss]		12半音(ド〜シ)チューニング・オフセット(12バイト)
			00H：−64セント
			40H：± 0セント(平均律)
			7FH：＋63セント
F7		EOX
----------------------------------------------------------------------

(12) スケール/オクターブ・チューニング 2バイト形式(リアルタイム)
----------------------------------------------------------------------
F0 7F <device ID> 08 09 ff gg hh [ss tt] ... F7

F0 7F		ユニバーサル・リアルタイムSysEx.ヘッダ
<device ID>	対象デバイスID(7F：全デバイス)
08		サブID#1：“MIDIチューニング標準”
09		サブID#2：“スケール/オクターブ・チューニング
				2バイト形式(リアルタイム)”
ff		チャンネル/オプション・バイト1
			ビット0〜1：チャンネル15〜16
			ビット2〜6：将来の拡張のため予約
gg		チャンネル・バイト2
			ビット0〜6：チャンネル8〜14
hh		チャンネル・バイト3
			ビット0〜6：チャンネル1〜7
[ss tt]		12半音(ド〜シ)チューニング・オフセット(24バイト)
			00H 00H：−100セント(0.012207セントの8,192段)
			40H 00H：±  0セント(平均律)
			7FH 7FH：＋100セント(0.012207セントの8,191段)
F7		EOX
----------------------------------------------------------------------

(13) スケール/オクターブ・チューニング 2バイト形式(非リアルタイム)
----------------------------------------------------------------------
F0 7E <device ID> 08 09 ff gg hh [ss tt] ... F7

F0 7E		ユニバーサル・非リアルタイムSysEx.ヘッダ
<device ID>	対象デバイスID(7F：全デバイス)
08		サブID#1：“MIDIチューニング標準”
09		サブID#2：“スケール/オクターブ・チューニング
				2バイト形式(非リアルタイム)”
ff		チャンネル/オプション・バイト1
			ビット0〜1：チャンネル15〜16
			ビット2〜6：将来の拡張のため予約
gg		チャンネル・バイト2
			ビット0〜6：チャンネル8〜14
hh		チャンネル・バイト3
			ビット0〜6：チャンネル1〜7
[ss tt]		12半音(ド〜シ)チューニング・オフセット(24バイト)
			00H 00H：−100セント(0.012207セントの8,192段)
			40H 00H：±  0セント(平均律)
			7FH 7FH：＋100セント(0.012207セントの8,191段)
F7		EOX
----------------------------------------------------------------------

(14) 音律調性制御チューニング(リアルタイム)
----------------------------------------------------------------------
F0 7F <device ID> 08 0A sf mi F7

F0 7F		ユニバーサル・リアルタイムSysEx.ヘッダ
<device ID>	対象デバイスID(7F：全デバイス)
08		サブID#1：“MIDIチューニング標準”
0A		サブID#2：“音律調性制御チューニング(リアルタイム)”
sf		調号の数(1バイト)
			39H：♭×7
			3FH：♭×1
			40H：調号なし
			41H：♯×1
			47H：♯×7
mi		長調/短調(1バイト)
			00H：長調
			01H：短調
			02H：経過的長調
			03H：経過的短調
F7		EOX
----------------------------------------------------------------------

(15) 音律調性制御チューニング(非リアルタイム)
----------------------------------------------------------------------
F0 7E <device ID> 08 0A sf mi F7

F0 7E		ユニバーサル・非リアルタイムSysEx.ヘッダ
<device ID>	対象デバイスID(7F：全デバイス)
08		サブID#1：“MIDIチューニング標準”
0A		サブID#2：“音律調性制御チューニング(非リアルタイム)”
sf		調号の数(1バイト)
			39H：♭×7
			3FH：♭×1
			40H：調号なし
			41H：♯×1
			47H：♯×7
mi		長調/短調(1バイト)
			00H：長調
			01H：短調
			02H：経過的長調
			03H：経過的短調
F7		EOX
----------------------------------------------------------------------

(16) 音律種別制御チューニング(リアルタイム)
----------------------------------------------------------------------
F0 7F <device ID> 08 0B ff gg hh tt F7

F0 7F		ユニバーサル・リアルタイムSysEx.ヘッダ
<device ID>	対象デバイスID(7F：全デバイス)
08		サブID#1：“MIDIチューニング標準”
0B		サブID#2：“音律種別制御チューニング(リアルタイム)”
ff		チャンネル/オプション・バイト1
			ビット0〜1：チャンネル15〜16
			ビット2：ポートA/B
			ビット3〜6：将来の拡張のため予約
gg		チャンネル・バイト2
			ビット0〜6：チャンネル8〜14
hh		チャンネル・バイト3
			ビット0〜6：チャンネル1〜7
tt		音律種別(1バイト)
			00H：平均律
			01H：ピタゴラス音律
			02H：中全音律
			03H：純正律
			40H：ユーザ定義音律#0
			41H：ユーザ定義音律#1
			42H：ユーザ定義音律#2
			43H：ユーザ定義音律#3
F7		EOX
----------------------------------------------------------------------

(17) 音律種別制御チューニング(非リアルタイム)
----------------------------------------------------------------------
F0 7E <device ID> 08 0B ff gg hh tt F7

F0 7E		ユニバーサル・非リアルタイムSysEx.ヘッダ
<device ID>	対象デバイスID(7F：全デバイス)
08		サブID#1：“MIDIチューニング標準”
0B		サブID#2：“音律種別制御チューニング(非リアルタイム)”
ff		チャンネル/オプション・バイト1
			ビット0〜1：チャンネル15〜16
			ビット2：ポートA/B
			ビット3〜6：将来の拡張のため予約
gg		チャンネル・バイト2
			ビット0〜6：チャンネル8〜14
hh		チャンネル・バイト3
			ビット0〜6：チャンネル1〜7
tt		音律種別(1バイト)
			00H：平均律
			01H：ピタゴラス音律
			02H：中全音律
			03H：純正律
			40H：ユーザ定義音律#0
			41H：ユーザ定義音律#1
			42H：ユーザ定義音律#2
			43H：ユーザ定義音律#3
F7		EOX
----------------------------------------------------------------------

(18) ユーザ定義音律登録(非リアルタイム)
----------------------------------------------------------------------
F0 7E <device ID> 08 0C tt <temper name>
		ll [fh fl bh bl aa bb cc dd ee ff] ... F7

F0 7E		ユニバーサル・非リアルタイムSysEx.ヘッダ
<device ID>	対象デバイスID(7F：全デバイス)
08		サブID#1：“MIDIチューニング標準”
0C		サブID#2：“ユーザ定義音律ダンプ(非リアルタイム)”
tt		音律プログラム番号(0〜63)
<temper name>	音律名(ASCII16文字)
ll		定式の数([fh fl bh bl aa bb cc dd ee ff]のセット)
[fh		適用音程ビットマスク・バイト1
			ビット0〜3：五度圏上昇8〜11段
			ビット4〜5：将来の拡張のため予約
			ビット6：長調フラグ(リバーサル)
 fl		適用音程ビットマスク・バイト2
			ビット0〜6：五度圏上昇1〜7段
 bh		適用音程ビットマスク・バイト3
			ビット0〜3：五度圏下降8〜11段
			ビット4〜5：将来の拡張のため予約
			ビット6：短調フラグ(リバーサル)
 bl		適用音程ビットマスク・バイト4
			ビット0〜6：五度圏下降1〜7段
 aa bb		分数(aa/bb)
 cc dd ee ff]	べき乗((cc/dd)^(ee/ff))(定式の数回繰り返し)
F7		EOX
----------------------------------------------------------------------

======================================================================
音律調性における長調/短調
======================================================================

一般的なハ長調の曲で使われる主要三和音は，C，G，FだけでなくAm，Em，Dmも
頻繁に現れます。また，Cm，Gm，Fm，A，E，Dなどもあり得ます。これらのコー
ドは，純正律(ハ長調)だけでは対応できないので，プレーヤーは曲の進行に合
わせて音律を変更することが必要です。

この問題を解決するため，TiMidity++では下記の音律を用意しています。

(1) ピタゴラス音律(ハ長調)のCのピッチを基準とした純正律(ハ長調)
(2) ピタゴラス音律(イ短調)のAのピッチを基準とした純正律(イ短調)
(3) ピタゴラス音律(ハ長調)のAのピッチを基準とした純正律(経過的ハ長調)
(4) ピタゴラス音律(イ短調)のCのピッチを基準とした純正律(経過的イ短調)

もう少し精密な議論をします。下記のような音系網を考えてみましょう。

-----------------------------------------------------------------------------
D--   A--   E--   B--   F#--  C#--  G#--  D#--  A#--  E#--  B#--  F##-- C##--
Bb-   F-    C-    G-    D-    A-    E-    B-    F#-   C#-   G#-   D#-   A#-  
Gb    Db    Ab    Eb    Bb    F     C     G     D     A     E     B     F#   
Ebb+  Bbb+  Fb+   Cb+   Gb+   Db+   Ab+   Eb+   Bb+   F+    C+    G+    D+   
Cbb++ Gbb++ Dbb++ Abb++ Ebb++ Bbb++ Fb++  Cb++  Gb++  Db++  Ab++  Eb++  Bb++ 
-----------------------------------------------------------------------------

“ABCDEFG”の表記はピタゴラス音律に従います。また“+”“-”“++”“--”
の表記は，それぞれ1sc上昇，1sc下降，2sc上昇，2sc下降を意味します。

この音系網から，4×3の長方形に並ぶ12の音を取り出せば，1つの純正律チュー
ニングを設定できます。例えば，Cチューニング，Aチューニング，A-チューニ
ング，C+チューニングは，それぞれ下記のように表現できます。

[Cチューニング(ハ長調)]
----------------------
A-    E-    B-    F#- 
F     C     G     D   
Db+   Ab+   Eb+   Bb+ 
----------------------

[Aチューニング(イ短調)]
----------------------
F#-   C#-   G#-   D#- 
D     A     E     B   
Bb+   F+    C+    G+  
----------------------

[C+チューニング(経過的ハ長調)]
----------------------
A     E     B     F#  
F+    C+    G+    D+  
Db++  Ab++  Eb++  Bb++
----------------------

[A-チューニング(経過的イ短調)]
----------------------
F#--  C#--  G#--  D#--
D-    A-    E-    B-  
Bb    F     C     G   
----------------------

長調主体の曲には平行調チューニングの音程を僅かに下げたチューニングの組
み合わせを，短調主体の曲には平行調チューニングの音程を僅かに上げたチュ
ーニングの組み合わせを基本に選択すれば，すこぶる良好な結果になると思い
ます。

======================================================================
音律種別制御チューニングのプリセット音律
======================================================================

まず，ピタゴラス音律(長調)半音階を，下記のような漸化式で表現しておきま
す。ここで，[]内のインデックスは，主音を基準としたオフセットで，演算結
果が必ず1と2の間に収まるように，必要に応じて1/2倍または2倍しています。

[ピタゴラス音律(長調)半音階]
pytha_maj[ 0] = 1                       # C  1
pytha_maj[ 7] = pytha_maj[ 0] * 3/2     # G  3/2
pytha_maj[ 2] = pytha_maj[ 7] * 3/2     # D  9/8
pytha_maj[ 9] = pytha_maj[ 2] * 3/2     # A  27/16
pytha_maj[ 4] = pytha_maj[ 9] * 3/2     # E  81/64
pytha_maj[11] = pytha_maj[ 4] * 3/2     # B  243/128
pytha_maj[ 6] = pytha_maj[11] * 3/2     # F# 729/512
--
pytha_maj[ 5] = pytha_maj[ 0] * 2/3     # F  4/3
pytha_maj[10] = pytha_maj[ 5] * 2/3     # Bb 16/9
pytha_maj[ 3] = pytha_maj[10] * 2/3     # Eb 32/27
pytha_maj[ 8] = pytha_maj[ 3] * 2/3     # Ab 128/81
pytha_maj[ 1] = pytha_maj[ 8] * 2/3     # Db 256/243

これに対し，純正律(長調)半音階は，下記のような漸化式で表現することがで
きます。ここで，scはシントニック・コンマ(=81/80)の意味です。

[純正律(長調)半音階]
pure_maj[ 0] = 1                        # C  1
pure_maj[ 7] = pure_maj[ 0] * 3/2       # G  3/2
pure_maj[ 2] = pure_maj[ 7] * 3/2       # D  9/8
pure_maj[ 9] = pure_maj[ 2] * 3/2 / sc  # A  5/3
pure_maj[ 4] = pure_maj[ 9] * 3/2       # E  5/4
pure_maj[11] = pure_maj[ 4] * 3/2       # B  15/8
pure_maj[ 6] = pure_maj[11] * 3/2       # F# 45/32
--
pure_maj[ 5] = pure_maj[ 0] * 2/3       # F  4/3
pure_maj[10] = pure_maj[ 5] * 2/3 * sc  # Bb 9/5
pure_maj[ 3] = pure_maj[10] * 2/3       # Eb 6/5
pure_maj[ 8] = pure_maj[ 3] * 2/3       # Ab 8/5
pure_maj[ 1] = pure_maj[ 8] * 2/3       # Db 16/15

主音から五度圏上昇時にAで1sc下降，五度圏下降時にBbで1sc上昇する点以外は，
基本的にピタゴラス音律と同じということが理解できます。

同様に，ピタゴラス音律(短調)半音階と純正律(短調)半音階を，下記のような
漸化式で表現してみます。右側に書かれた分数は，ものすごい値になっていま
すが，漸化式自体はとてもシンプルです。

[ピタゴラス音律(短調)半音階]
pytha_min[ 0] = 1                       # C  1
pytha_min[ 7] = pytha_min[ 0] * 3/2     # G  3/2
pytha_min[ 2] = pytha_min[ 7] * 3/2     # D  9/8
pytha_min[ 9] = pytha_min[ 2] * 3/2     # A  27/16
pytha_min[ 4] = pytha_min[ 9] * 3/2     # E  81/64
pytha_min[11] = pytha_min[ 4] * 3/2     # B  243/128
pytha_min[ 6] = pytha_min[11] * 3/2     # F# 729/512
pytha_min[ 1] = pytha_min[ 6] * 3/2     # C# 2187/2048
pytha_min[ 8] = pytha_min[ 1] * 3/2     # G# 6561/4096
pytha_min[ 3] = pytha_min[ 8] * 3/2     # D# 19683/16384
--
pytha_min[ 5] = pytha_min[ 0] * 2/3     # F  4/3
pytha_min[10] = pytha_min[ 5] * 2/3     # Bb 16/9

[純正律(短調)半音階]
pure_min[ 0] = 1                  * sc  # C  1     * sc
pure_min[ 7] = pure_min[ 0] * 3/2       # G  3/2   * sc
pure_min[ 2] = pure_min[ 7] * 3/2 / sc  # D  10/9  * sc
pure_min[ 9] = pure_min[ 2] * 3/2       # A  5/3   * sc
pure_min[ 4] = pure_min[ 9] * 3/2       # E  5/4   * sc
pure_min[11] = pure_min[ 4] * 3/2       # B  15/8  * sc
pure_min[ 6] = pure_min[11] * 3/2 / sc  # F# 25/18 * sc
pure_min[ 1] = pure_min[ 6] * 3/2       # C# 25/24 * sc
pure_min[ 8] = pure_min[ 1] * 3/2       # G# 25/16 * sc
pure_min[ 3] = pure_min[ 8] * 3/2       # D# 75/64 * sc
--
pure_min[ 5] = pure_min[ 0] * 2/3       # F  4/3   * sc
pure_min[10] = pure_min[ 5] * 2/3       # Bb 16/9  * sc

長調との違いは，ピタゴラス音律の境界位置が完全5度3つ分上昇しているのと，
シントニック・コンマ上昇/下降の位置，および旋律パート(ピタゴラス音律)と
伴奏パート(純正律)で短調の主音が一致するように，純正律を1sc高く調整して
いる点です。

ところで，TiMidity++のプリセット音律として，ピタゴラス音律，純正律の他
に，中全音律も用意されています。中全音律(長調)は，長3度が純正という一般
的なものなのに対し，中全音律(短調)は，短3度が純正なサリナス音律という構
成になっています。中全音律(長調)半音階と中全音律(短調)半音階は，下記の
ような漸化式で表現することができます。

[中全音律(長調)半音階]
mt_maj[ 0] = 1                          # C  1
mt_maj[ 7] = mt_maj[ 0] * 5^(1/4)       # G  5^(1/4)
mt_maj[ 2] = mt_maj[ 7] * 5^(1/4)       # D  5^(1/2) / 2
mt_maj[ 9] = mt_maj[ 2] * 5^(1/4)       # A  5^(3/4) / 2
mt_maj[ 4] = mt_maj[ 9] * 5^(1/4)       # E  5/4
mt_maj[11] = mt_maj[ 4] * 5^(1/4)       # B  5^(5/4) / 4
mt_maj[ 6] = mt_maj[11] * 5^(1/4)       # F# 5^(3/2) / 8
--
mt_maj[ 5] = mt_maj[ 0] / 5^(1/4)       # F  2 / 5^(1/4)
mt_maj[10] = mt_maj[ 5] / 5^(1/4)       # Bb 4 / 5^(1/2)
mt_maj[ 3] = mt_maj[10] / 5^(1/4)       # Eb 4 / 5^(3/4)
mt_maj[ 8] = mt_maj[ 3] / 5^(1/4)       # Ab 8/5
mt_maj[ 1] = mt_maj[ 8] / 5^(1/4)       # Db 8 / 5^(5/4)

[中全音律(短調)半音階]
mt_min[ 0] = 1          * sc            # C  1                 * sc
mt_min[ 7] = mt_min[ 0] * (10/3)^(1/3)  # G  (10/3)^(1/3)      * sc
mt_min[ 2] = mt_min[ 7] * (10/3)^(1/3)  # D  (10/3)^(2/3) /  2 * sc
mt_min[ 9] = mt_min[ 2] * (10/3)^(1/3)  # A  5/3               * sc
mt_min[ 4] = mt_min[ 9] * (10/3)^(1/3)  # E  (10/3)^(4/3) /  4 * sc
mt_min[11] = mt_min[ 4] * (10/3)^(1/3)  # B  (10/3)^(5/3) /  4 * sc
mt_min[ 6] = mt_min[11] * (10/3)^(1/3)  # F# 25/18             * sc
mt_min[ 1] = mt_min[ 6] * (10/3)^(1/3)  # C# (10/3)^(7/3) / 16 * sc
mt_min[ 8] = mt_min[ 1] * (10/3)^(1/3)  # G# (10/3)^(8/3) / 16 * sc
mt_min[ 3] = mt_min[ 8] * (10/3)^(1/3)  # D# 125/108           * sc
--
mt_min[ 5] = mt_min[ 0] / (10/3)^(1/3)  # F  2 / (10/3)^(1/3)  * sc
mt_min[10] = mt_min[ 5] / (10/3)^(1/3)  # Bb 4 / (10/3)^(2/3)  * sc

中全音律(短調)の境界位置が完全5度3つ分上昇しているのと，全体を1sc高く調
整している点は，ピタゴラス音律(短調)と純正律(短調)と同じ事情です。

さて，この中全音律の用途ですが，ピタゴラス音律より和声的であり，かつ純
正律のように音階が凸凹しないという特性から，和声的なメロディに使えるの
ではないだろうかと考えています。

======================================================================
ユーザ定義音律登録
======================================================================

TiMidity++は，ユーザ定義音律の登録機能を実装しています。MIDI Tuning
Standard概略(本文書の先頭を参照)の(18)に相当します。例えば，下記のよう
なSysEx.を与えることにより，様々な音律の生成が可能です。

[平均律]
f0 7e 00 08 0c 00                                   ; 音律プログラム番号
65 71 75 61 6c 00 00 00 00 00 00 00 00 00 00 00     ; "equal"
01                                                  ; 定式の数
0f 7f 00 00 01 01 02 01 07 0c                       ; (両方) 2^(7/12)
f7

[ピタゴラス音律]
f0 7e 00 08 0c 01                                   ; 音律プログラム番号
50 79 74 68 61 67 6f 72 61 73 00 00 00 00 00 00     ; "Pythagoras"
02                                                  ; 定式の数
00 3f 40 1f 03 02 01 01 00 01                       ; (長調) 3/2
43 7f 00 03 03 02 01 01 00 01                       ; (短調) 3/2
f7

[中全音律]
f0 7e 00 08 0c 02                                   ; 音律プログラム番号
6d 65 61 6e 2d 74 6f 6e 65 00 00 00 00 00 00 00     ; "mean-tone"
02                                                  ; 定式の数
00 3f 40 1f 01 01 05 01 01 04                       ; (長調) 5^(1/4)
43 7f 00 03 01 01 0a 03 01 03                       ; (短調) (10/3)^(1/3)
f7

[純正律]
f0 7e 00 08 0c 03                                   ; 音律プログラム番号
70 75 72 65 20 69 6e 74 6f 6e 61 74 69 6f 6e 00     ; "pure intonation"
04                                                  ; 定式の数
00 3f 40 1f 03 02 01 01 00 01                       ; (長調) 3/2
00 04 40 02 05 01 02 03 04 01                       ; (長調) 5*(2/3)^4
43 7f 00 03 03 02 01 01 00 01                       ; (短調) 3/2
40 22 00 00 05 01 02 03 04 01                       ; (短調) 5*(2/3)^4
f7

[キルンベルガー第三番]
f0 7e 00 08 0c 00                                   ; 音律プログラム番号
4b 69 72 6e 62 65 72 67 65 72 2d 33 00 00 00 00     ; "Kirnberger-3"
02                                                  ; 定式の数
00 0f 00 00 01 01 05 01 01 04                       ; (両方) 5^(1/4)
00 30 00 1f 03 02 01 01 00 01                       ; (両方) 3/2
f7

[平島達司音律]
f0 7e 00 08 0c 01                                   ; 音律プログラム番号
48 69 72 61 73 68 69 6d 61 00 00 00 00 00 00 00     ; "Hirashima"
02                                                  ; 定式の数
00 1f 00 03 01 01 05 01 01 04                       ; (両方) 5^(1/4)
00 00 00 3c 03 02 01 01 00 01                       ; (両方) 3/2
f7

[ヴェルクマイスター第三番]
f0 7e 00 08 0c 02                                   ; 音律プログラム番号
57 65 72 63 6b 6d 65 69 73 74 65 72 2d 33 00 00     ; "Werckmeister-3"
02                                                  ; 定式の数
00 07 00 00 01 09 02 01 0f 04                       ; (両方) 2^(15/4)/9
00 18 00 3f 03 02 01 01 00 01                       ; (両方) 3/2
f7

[ウェルテンペラメント]
f0 7e 00 08 0c 03                                   ; 音律プログラム番号
77 65 6c 6c 2d 74 65 6d 70 65 72 00 00 00 00 00     ; "well-temper"
02                                                  ; 定式の数
00 07 00 00 01 09 02 01 0f 04                       ; (両方) 2^(15/4)/9
00 00 01 7f 03 02 01 01 00 01                       ; (両方) 3/2
f7

----
田向 正一 <tamuki@linet.gr.jp>
